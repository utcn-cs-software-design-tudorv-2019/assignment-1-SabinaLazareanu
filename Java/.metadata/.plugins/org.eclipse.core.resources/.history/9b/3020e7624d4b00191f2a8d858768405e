package assigment1.tucn.cs.database.config;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

public class JDBConnectionWrapper {
	private static String driver = "com.mysql.jdbc.Driver";
	private static String url = "jdbc:mysql://localhost/";

	private static String user = "root";
	private static String password = "";
	private static int timeout = 5;

	private Connection connection;

	public JDBConnectionWrapper(String schema) throws JDBConnectionException {
		try {
			Class.forName(driver);
			connection = DriverManager.getConnection(url + schema, user, password);
		} catch (ClassNotFoundException | SQLException e) {
			throw new JDBConnectionException(e.getMessage());
		}
	}

	private static void setProperties() {
		LOGGER.debug("ENTER");
		String resourceName = "database.properties"; // could also be a constant
		ClassLoader loader = Thread.currentThread().getContextClassLoader();
		Properties prop = new Properties();
		InputStream resourceStream = null;
		try {
			resourceStream = loader.getResourceAsStream(resourceName);
			prop.load(resourceStream);

			url = prop.getProperty("url");
			username = prop.getProperty("username");
			password = prop.getProperty("password");
			driver = prop.getProperty("driver");

		} catch (IOException e) {
			System.out.println(e.getMessage());
			LOGGER.error("ERROR", e);
			System.exit(0);
		} finally {
			if (resourceStream != null) {
				try {
					resourceStream.close();
				} catch (IOException e) {
					System.out.println(e.getMessage());
					LOGGER.error("ERROR", e);
				}
			}
		}

		LOGGER.debug("LEAVE");
	}

	public boolean testConnection() throws SQLException {
		return connection.isValid(timeout);
	}

	public Connection getConnection() {
		return connection;
	}

}
