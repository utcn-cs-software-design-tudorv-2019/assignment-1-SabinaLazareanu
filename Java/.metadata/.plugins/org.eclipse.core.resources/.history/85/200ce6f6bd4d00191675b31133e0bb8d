package assigment1.tucn.cs.UI;

import java.io.IOException;
import java.util.Objects;

import assigment1.tucn.cs.BLL.LoginService;
import assigment1.tucn.cs.DAL.ExecutionException;
import assigment1.tucn.cs.DAL.Student;
import assigment1.tucn.cs.DAL.StudentRepository;
import assigment1.tucn.cs.DAL.Teacher;
import assigment1.tucn.cs.DAL.TeacherRepository;
import assigment1.tucn.cs.DAL.User;
import assigment1.tucn.cs.database.config.JDBConnectionConfig;
import assigment1.tucn.cs.database.config.JDBConnectionException;
import javafx.application.Application;
import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Insets;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class UserInterface extends Application {

	private String checkUser;
	private String checkPassword;
	private JDBConnectionConfig dbConnectionWrapper;
	private StudentRepository studentRepo;
	private TeacherRepository teacherRepo;
	private LoginService loginService;

	private static final String SCHEMA = "university_db";

	public static void main(String[] args) {
		launch(args);
	}

	public void init() {
		try {
			this.dbConnectionWrapper = new JDBConnectionConfig(SCHEMA);
			this.studentRepo = new StudentRepository(dbConnectionWrapper);
			this.teacherRepo = new TeacherRepository(dbConnectionWrapper);
			this.loginService = new LoginService(studentRepo, teacherRepo);
		} catch (JDBConnectionException e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(Stage primaryStage) {
		init();
		loginPage(primaryStage);
	}

	private void loginPage(final Stage primaryStage) {
		primaryStage.setTitle("Login");

		BorderPane bp = new BorderPane();
		bp.setPadding(new Insets(10, 50, 50, 100));

		// Adding HBox
		HBox hb = new HBox();
		hb.setPadding(new Insets(20, 20, 20, 50));

		// Adding GridPane
		GridPane gridPane = new GridPane();
		gridPane.setPadding(new Insets(20, 20, 20, 20));
		gridPane.setHgap(5);
		gridPane.setVgap(5);

		// Implementing Nodes for GridPane
		Label lblUserName = new Label("Username");
		final TextField txtUserName = new TextField();
		Label lblPassword = new Label("Password");
		final PasswordField passfield = new PasswordField();
		Button btnLogin = new Button("Login");
		final Label lblMessage = new Label();

		// Adding Nodes to GridPane layout
		gridPane.add(lblUserName, 0, 0);
		gridPane.add(txtUserName, 1, 0);
		gridPane.add(lblPassword, 0, 1);
		gridPane.add(passfield, 1, 1);
		gridPane.add(btnLogin, 2, 1);
		gridPane.add(lblMessage, 1, 2);

		// Adding text and DropShadow effect to it
		Text text = new Text("Login");
		text.setFont(Font.font("Courier New", FontWeight.BOLD, 28));

		// Adding text to HBox
		hb.getChildren().add(text);

		// Add ID's to Nodes
		bp.setId("bp");
		gridPane.setId("root");
		btnLogin.setId("btnLogin");
		text.setId("text");

		// Action for btnLogin
		btnLogin.setOnAction(new EventHandler() {
			@Override
			public void handle(Event arg0) {
				User currentUser = null;
				checkUser = txtUserName.getText().toString();
				checkPassword = passfield.getText().toString();
				try {
					System.out.println(checkUser + checkPassword);
					currentUser = loginService.login(checkUser, checkPassword);
					if (currentUser instanceof Teacher) {
						lblMessage.setText("TEACHER!");
					} else if (currentUser instanceof Student) {
						lblMessage.setText("STUDENT!");
						studentPage();
					} else if (Objects.isNull(currentUser)) {
						lblMessage.setText("Username or password invalid!!");
					}
				} catch (ExecutionException | IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
//				checkUser = txtUserName.getText().toString();
//				checkPw = pf.getText().toString();
//				if (checkUser.equals(user) && checkPw.equals(password)) {
//					lblMessage.setText("Congratulations!");
//					lblMessage.setTextFill(Color.GREEN);
//				} else {
//					lblMessage.setText("Incorrect user or pw.");
//					lblMessage.setTextFill(Color.RED);
//				}
//				txtUserName.setText("");
//				pf.setText("");

			}
		});

		// Add HBox and GridPane layout to BorderPane Layout
		bp.setTop(hb);
		bp.setCenter(gridPane);

		// Adding BorderPane to the scene and loading CSS
		Scene scene = new Scene(bp);
		primaryStage.setScene(scene);
		primaryStage.show();
	}

	private void studentPage() throws IOException {
		Stage studentStage = new Stage();
		Parent root = FXMLLoader.load(getClass().getResource("student.fxml"));
		studentStage.setScene(new Scene(root));
		studentStage.showAndWait();

	}
}