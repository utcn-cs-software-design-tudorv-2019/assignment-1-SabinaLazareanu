package assigment1.tucn.cs.database.config;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

public class JDBConnectionConfig {
	private static String driver;
	private static String url;

	private static String username;
	private static String password ;
	private static int timeout;

	private Connection connection;

	public JDBConnectionConfig(String schema) throws JDBConnectionException {
		try {
			setProperties();
			Class.forName(driver);
			connection = DriverManager.getConnection(url + schema, username, password);
		} catch (ClassNotFoundException | SQLException e) {
			throw new JDBConnectionException(e.getMessage());
		}
	}

	private static void setProperties() {
		String resourceName = "database.properties"; // could also be a constant
		ClassLoader loader = Thread.currentThread().getContextClassLoader();
		Properties propertiesFile = new Properties();
		InputStream resourceStream = null;
		try {
			resourceStream = loader.getResourceAsStream(resourceName);
			propertiesFile.load(resourceStream);

			url = propertiesFile.getProperty("url");
			username = propertiesFile.getProperty("username");
			password = propertiesFile.getProperty("password");
			driver = propertiesFile.getProperty("driver");
			timeout = Integer.parseInt(propertiesFile.getProperty("timeout"));

		} catch (IOException e) {
			System.out.println(e.getMessage());
			System.exit(0);
		} finally {
			if (resourceStream != null) {
				try {
					resourceStream.close();
				} catch (IOException e) {
					System.out.println(e.getMessage());
				}
			}
		}
	}

	public boolean testConnection() throws SQLException {
		return connection.isValid(timeout);
	}

	public Connection getConnection() {
		return connection;
	}

}
